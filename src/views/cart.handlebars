<h1>Carrito de Compras</h1>

<div id="cart-container">
  <p>Cargando carrito...</p>
</div>

<button id="vaciarCarritoBtn" onclick="vaciarCarrito()" style="display: none;">
  Vaciar Carrito
</button>

<button id="finalizarCompraBtn" onclick="finalizarCompra()" style="display: none;">
  Finalizar Compra
</button>

<button onclick="location.href='/'">Volver al inicio</button>

<script>
  async function cargarCarrito() {
    const cartId = localStorage.getItem("cartId");

    if (!cartId) {
      document.getElementById("cart-container").innerHTML = "<p>No hay un carrito disponible.</p>";
      return;
    }

    try {
      const response = await fetch(`/api/carts`);
      if (!response.ok) throw new Error("No se pudo cargar el carrito.");

      const data = await response.json();
      if (data.status !== "success") throw new Error(data.message);

      const productos = data.cart.products;
      const container = document.getElementById("cart-container");

      if (!productos.length) {
        container.innerHTML = "<p>El carrito está vacío.</p>";
        return;
      }

      const ul = document.createElement("ul");
      productos.forEach(p => {
        const li = document.createElement("li");
        li.innerHTML = `
          <strong>${p.product.nombre}</strong> -
          Precio: $${p.product.precio} -
          Cantidad: ${p.quantity}
          <button onclick="eliminarProducto('${p.product._id}')">-</button>
          <button onclick="agregarProducto('${p.product._id}')">+</button>
        `;
        ul.appendChild(li);
      });

      container.innerHTML = "";
      container.appendChild(ul);

      document.getElementById("vaciarCarritoBtn").style.display = "inline-block";
      document.getElementById("finalizarCompraBtn").style.display = "inline-block";
    } catch (error) {
      console.error("Error al cargar el carrito:", error);
      document.getElementById("cart-container").innerHTML =
        `<p style="color: red;">Error: ${error.message}</p>`;
    }
  }

  async function vaciarCarrito() {
    try {
      const response = await fetch(`/api/carts/`, { method: "DELETE" });
      const data = await response.json();
      if (data.status === "success") {
        alert("Carrito vaciado correctamente.");
        window.location.reload();
      } else {
        throw new Error(data.message);
      }
    } catch (error) {
      console.error("Error al vaciar el carrito:", error);
      alert("Error al vaciar el carrito: " + error.message);
    }
  }

  async function eliminarProducto(productId) {
    try {
      const response = await fetch(`/api/carts/products/${productId}`, { method: "DELETE" });
      const data = await response.json();
      if (data.status === "success") {
        cargarCarrito();
      } else {
        throw new Error(data.message);
      }
    } catch (error) {
      console.error("Error al eliminar producto:", error);
      alert("Error: " + error.message);
    }
  }

  async function agregarProducto(productId) {
    try {
      const response = await fetch(`/api/carts/products/${productId}`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ quantity: 1 })
      });
      const data = await response.json();
      if (data.status === "success") {
        cargarCarrito();
      } else {
        throw new Error(data.message);
      }
    } catch (error) {
      console.error("Error al agregar producto:", error);
      alert("Error: " + error.message);
    }
  }

  async function finalizarCompra() {
    try {
      const response = await fetch(`/api/carts/purchase`, {
        method: "POST"
      });

      const data = await response.json();

      console.log("Respuesta del backend:", data); 

      if (data.status === "success" && data.ticket) {
        console.log("Ticket recibido del backend:", data.ticket);
        sessionStorage.setItem("lastTicket", JSON.stringify(data.ticket));
        window.location.href = "/purchase";
      } else if (data.status === "success" && !data.ticket) {
        alert("No se pudo generar un ticket porque no hay productos con stock suficiente.");
      } else {
        throw new Error(data.message);
      }
    } catch (error) {
      console.error("Error al finalizar la compra:", error);
      alert("Error: " + error.message);
    }
  }

  cargarCarrito();
</script>
